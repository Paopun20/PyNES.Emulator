name: Build PyNES Emulator

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1 libglib2.0-0 libxrender1 libgomp1

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install libomp

    - name: Cache pip dependencies
      uses: actions/cache@v4.3.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create build directory
      run: mkdir -p dist

    - name: Build executable with PyInstaller
      run: |
        pyinstaller pynes.spec --clean --noconfirm

    - name: Test executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Just check if the executable was created successfully
        if (Test-Path "dist\pynes.exe") {
          Write-Host "Build successful: pynes.exe created"
          # Get file size for verification
          $size = (Get-Item "dist\pynes.exe").Length
          Write-Host "File size: $size bytes"
        } else {
          Write-Error "Build failed: pynes.exe not found"
          exit 1
        }

    - name: Test executable (macOS/Linux)
      if: matrix.os != 'windows-latest'
      run: |
        # Just check if the executable was created successfully
        if [ -f "dist/pynes" ]; then
          echo "Build successful: pynes executable created"
          # Get file size for verification
          size=$(stat -f%z "dist/pynes" 2>/dev/null || stat -c%s "dist/pynes")
          echo "File size: $size bytes"
        else
          echo "Build failed: pynes executable not found"
          exit 1
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      if: always()
      with:
        name: pynes-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          dist/pynes*
        retention-days: 30